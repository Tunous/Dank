name: Debug
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Preparation

      - name: Checkout
        uses: actions/checkout@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # Debug APK

      - name: Assemble debug APK
        uses: burrunan/gradle-cache-action@v1.5
        with:
          arguments: :app:assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@master
        with:
          name: Dawn Debug APK
          path: app/build/outputs/apk/debug/app-debug.apk

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      # Preparation

      - name: Checkout
        uses: actions/checkout@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # Tests

      - name: Run tests
        uses: burrunan/gradle-cache-action@v1.5
        with:
          arguments: testDebug

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: Test report
          path: app/build/reports

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload raw JUnit results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: Raw JUnit results
          path: junit
